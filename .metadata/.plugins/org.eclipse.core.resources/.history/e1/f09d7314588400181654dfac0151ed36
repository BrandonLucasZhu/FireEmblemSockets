import org.apache.poi.*;
import org.apache.poi.ss.usermodel.*;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Iterator;

public class FECharacter {
	public static void main(String[] args) {
		/*File file = new File(".");
		for(String fileNames : file.list()) System.out.println(fileNames);
		*/
		try {
			FileInputStream file = new FileInputStream(new File("FEHeroes.xlsx"));
			
			//Create Workbook instance holding reference to .xlsx file
	        Workbook workbook = new XSSFWorkbook(file);
	        Sheet datatypeSheet = workbook.getSheetAt(2);
            //Iterator<Row> iterator = datatypeSheet.iterator();
            
	        for (Row row : datatypeSheet) {
	            for (Cell cell : row) {
	            // Here you might have to use the cell number to limit what you want.
	                CellReference cellRef = new CellReference(row.getRowNum(), cell.getCellNum());
	               // System.out.print(cellRef.formatAsString());
	                System.out.print(" - ");

	                switch(cell.getCellType()) {
	              case Cell.CELL_TYPE_STRING:
	                System.out.println(cell.getRichStringCellValue().getString());
	                break;
	              case Cell.CELL_TYPE_NUMERIC:
	                if(DateUtil.isCellDateFormatted(cell)) {
	                  System.out.println(cell.getDateCellValue());
	                } else {
	                  System.out.println(cell.getNumericCellValue());
	                }
	                break;
	              case Cell.CELL_TYPE_BOOLEAN:
	                System.out.println(cell.getBooleanCellValue());
	                break;
	              case Cell.CELL_TYPE_FORMULA:
	                System.out.println(cell.getCellFormula());
	                break;
	              default:
	                System.out.println();
	                }
	            }
	        }
            
            /*
            while (iterator.hasNext()) {

                Row currentRow = iterator.next();
                Iterator<Cell> cellIterator = currentRow.iterator();

                while (cellIterator.hasNext()) {

                    Cell currentCell = cellIterator.next();
                    //getCellTypeEnum shown as deprecated for version 3.15
                    //getCellTypeEnum ill be renamed to getCellType starting from version 4.0
                    if (currentCell.getCellTypeEnum() == CellType.STRING) {
                        System.out.print(currentCell.getStringCellValue() + "--");
                    } else if (currentCell.getCellTypeEnum() == CellType.NUMERIC) {
                        System.out.print(currentCell.getNumericCellValue() + "--");
                    }

                }
                System.out.println();

            }
	        */
	        
	        file.close();
			
		} catch (Exception e) {
	        e.printStackTrace();
	    }
	        
	}
}