package src;

import org.apache.poi.hssf.util.CellReference;
import org.apache.poi.ss.usermodel.*;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import java.util.*;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.Iterator;
import java.util.Map;
import java.io.LineNumberReader;


public class FECharacter {
	public static void main(String[] args) {
		/*File file = new File(".");
		for(String fileNames : file.list()) System.out.println(fileNames);
		*/
		String csvFile = "FEcsv.csv";
        String line = "";
        String cvsSplitBy = ",";
        Map<String, String> contactNum = new HashMap<>();
        ServerSocket serverSocket = null; 
		
        try (LineNumberReader br = new LineNumberReader(new FileReader(csvFile))) {

            while ((line = br.readLine()) != null) {
                // Skip the headings of the CSV file
            	if (br.getLineNumber() > 1) {
            		String[] contact = line.split(cvsSplitBy);
                    contactNum.put(contact[0],contact[1]);
            	}
            }
            
            try { 
   	         serverSocket = new ServerSocket(5587); 
   	        } 
	   	    catch (IOException e) 
	   	        { 
	   	         System.err.println("Could not listen on port: 5587."); 
	   	         System.exit(1); 
	   	        } 
	
	   	    Socket clientSocket = null; 
	   	    System.out.println ("Waiting for connection.....");
	
	   	    try { 
	   	         clientSocket = serverSocket.accept(); 
	   	        } 
	   	    catch (IOException e) 
	   	        { 
	   	         System.err.println("Accept failed."); 
	   	         System.exit(1); 
	   	        } 
            
            
            System.out.println ("Connection successful");
    	    System.out.println ("Waiting for input.....");
    	    
    	    Socket socket = serverSocket.accept();
    	    
    	    //Sending the response back to the client.
            OutputStream os = socket.getOutputStream();
            OutputStreamWriter osw = new OutputStreamWriter(os);
            BufferedWriter bw = new BufferedWriter(osw);
            
            while (contactNum.hasNext()) {
                Map.Entry pair = (Map.Entry)it.next();
                System.out.println(pair.getKey() + " = " + pair.getValue());
                it.remove(); // avoids a ConcurrentModificationException
            }
            
            bw.write(returnMessage);
            System.out.println("Message sent to the client is "+returnMessage);
            bw.flush();
    	    

    	    PrintWriter out = new PrintWriter(clientSocket.getOutputStream(), 
    	                                      true); 
    	    BufferedReader in = new BufferedReader( 
    	            new InputStreamReader(clientSocket.getInputStream())); 

    	    String inputLine; 

    	    while ((inputLine = in.readLine()) != null) 
    	        { 
    	         System.out.println ("Server: " + inputLine); 
    	         out.println(inputLine); 

    	         if (inputLine.equals("Bye.")) 
    	             break; 
    	        } 

    	    out.close(); 
    	    in.close(); 
    	    clientSocket.close(); 
    	    serverSocket.close(); 
            
            

        } catch (IOException e) {
            e.printStackTrace();
        }
        
        
        
		
        
	}
}